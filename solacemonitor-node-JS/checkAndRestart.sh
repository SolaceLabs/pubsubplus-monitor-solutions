#!/bin/bash

# This script check if all solacemon processes are running.
# It works by scanning the pid.file generated by the start.sh script.
# If any process ID are not running, it would start them according to the command in the pid.file.
# This script should be executed by crontab:
# * * * * * cd /ap/solacemon;./checkAndRestart.sh >> log/checkAndRestart.log 2>&1

PATH=/root/.nvm/versions/node/v10.15.3/bin:$PATH
if [ -x /usr/bin/rm ]; then
  RM=/usr/bin/rm
else
  RM=/bin/rm
fi
if [ -x /usr/bin/mv ]; then
  MV=/usr/bin/mv
else
  MV=/bin/mv
fi
CUT=/usr/bin/cut

PID_FILE=./pid.file

rm -f ${PID_FILE}.new

if [ -e $PID_FILE ]; then
  missing_found=0

  while read cur_line; do
    current_pid=`echo $cur_line | $CUT -d' ' -f 1`
    current_cmd=`echo $cur_line | $CUT -d' ' -f 2-`

    # if $current_pid is longer than 0 
    if [ -n "$current_pid" ]; then
      # check if the process with the pid is running
      ps -p $current_pid > /dev/null
      if [ $? -eq 1 ]; then
        echo `date` $current_pid is not running
        missing_found=1
        echo `date` Starting command: $current_cmd
        eval "${current_cmd}" 
        echo $! $current_cmd >> ${PID_FILE}.new
      else
        echo $current_pid $current_cmd >> ${PID_FILE}.new
      fi
    fi
  done < $PID_FILE

  # no missing processes
  if [ $missing_found -eq 0 ]; then
    echo `date` All processes are running.
    $RM -f ${PID_FILE}.new
  else
    $MV -f ${PID_FILE}.new $PID_FILE
  fi
#else
#  $PID_FILE does not exist, don't start the service
##  echo `date` Starting...
##  ./start.sh
fi

