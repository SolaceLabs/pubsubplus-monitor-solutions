
## SECTION:1 HOST DEFINITION ##

define host{
        use                     linux-server      			; Name of host template to use
        host_name               <HOST_NAME_TOKEN>			; Host name of the VPN  <**MODIFY TO THE HOSTNAME OF VPN**>
	parents			<PARENT_TOKEN>				; Name of the Solace router for the VPN <**MODIFY TO THE HOSTNAME OF ROUTER**>
        alias                   <HOST_ALIAS_TOKEN>			; Host name of the VPN <**MODIFY TO THE HOSTNAME OF VPN**>
        address                 <MGMT_ADDRESS_TOKEN>			; Management IP of the router, used for Ping checks - DO NOT APPEND a port number 
                                                                	; <**MODIFY TO THE MGMT IP OF ROUTER**>

	max_check_attempts	10

	# User defined macros - these are used as configuration parameters in service checks

	_router_name		<ROUTER_NAME_TOKEN>			; Name of the Solace router for the VPN <**MODIFY TO THE HOSTNAME OF ROUTER**>
	_address_port		<ADDRESS_PORT_TOKEN>			; Management IP of the router with port number, used for all SEMP communications
                                                                	; <**MODIFY TO THE SEMP MGMT IP:PORT OF ROUTER**>
	_msgBackBoneIP		<MSGB_ADDRESS_TOKEN>				; Msg-backbone IP of the router with port number, used for all data communications
                                                                	; <**MODIFY TO THE MSG-BACKBONE IP:PORT OF ROUTER**>
	_service_XML		<SERVICE_XML_TOKEN>	
									; temporary XML file where the outputs of service checks will be stored for display <**MODIFY FILENAME TO BE UNIQUE FOR THE VPN**>
	_config_file		<CONFIG_FILE_TOKEN>
									; Path to the VPNs host  definition configuration file - same as 
									; the current file name <**MODIFY FILENAME TO BE UNIQUE FOR THE VPN**>
	_service_filter		<SERVICE_FILTER_TOKEN>			; Service filter - prefix of all net.Solace service topics

	#User defined macros for VPN checks- Update these thresholds as required

	_vpn_name               <VPN_NAME_TOKEN>			; Host name of the VPN  <**MODIFY TO THE HOSTNAME OF VPN**>
	_vpn_wir		1000					; Warning  threshold for VPN Ingress Rate
	_vpn_cir		5000					; Critical threshold for VPN Ingress Rate
	_vpn_wer		1000					; Warning  threshold for VPN Egress  Rate
	_vpn_cer		5000					; Critical threshold for VPN Egress  Rate
	_vpn_wc			100					; Warning  threshold for VPN Connections
	_vpn_cc			1000					; Critical threshold for VPN Connections

	# User defined macros for VPN message-spool usage
	_vpn_spool_wu		60					; Warning threshold for VPN message-spool usage
	_vpn_spool_cu		80					; Critical threshold for VPN message-spool usage
 
	# User defined macros for queue checks- Update these thresholds as required. 

	_queue1                 <QUEUE_NAME_TOKEN>			; Name of the queue  <**MODIFY TO THE NAME OF QUEUE**>
	_queue1_wd		100					; Warning  threshold for queue depth
	_queue1_cd		1000					; Critical threshold for queue depth
	_queue1_wu		60					; Warning threshold for queue's spool usage (%)
	_queue1_cu		80					; Critical threshold for queue's spool usage (%)
	 
	#User defined macros for VPN bridge checks- Update these thresholds as required. 
        
	_bridge1                <BRIDGE_NAME_TOKEN>	         	; Bridge to be monitored <**MODIFY TO THE NAME OF BRIDGE**>

       }

## SECTION 2: SERVICE DEFINITIONS ##
## Do not edit this section, unless indicated by the <MODIFY> keyword 

## SERVICE DEFINITION:VPN STATUS ##
define service{
        use                     generic-service,graphed-service         ; Name of service template to use
        host_name               <HOST_NAME_TOKEN>                      ; <**MODIFY TO THE HOSTNAME OF VPN**>
        service_description     Message-vpn:Status			
        check_command           vpn!$_HOSTROUTER_NAME$!$_HOSTADDRESS_PORT$!$_HOSTVPN_NAME$!$_HOSTVPN_WIR$!$_HOSTVPN_CIR$!$_HOSTVPN_WER$!$_HOSTVPN_CER$!$_HOSTVPN_WC$!$_HOSTVPN_CC$
        }

## SERVICE DEFINITION:VPN SPOOL ##
define service{
        use                      generic-service,graphed-service        ; Name of service template to use
        host_name                <HOST_NAME_TOKEN>			; <**MODIFY TO THE HOSTNAME OF VPN**>
        service_description      Message-vpn:Spool
        check_command            spool_vpn!$_HOSTROUTER_NAME$!$_HOSTADDRESS_PORT$!$_HOSTVPN_NAME$!$_HOSTVPN_SPOOL_WU$!$_HOSTVPN_SPOOL_CU$
}

## SERVICE DEFINITION:SERVICE DISCOVERY ##
define service{
	use                      generic-service  			 ; Name of service template to use
	host_name                <HOST_NAME_TOKEN>			 ; <**MODIFY TO THE HOSTNAME OF VPN**>
	service_description      Message-vpn:Service Discovery
	check_command            serviceDiscover!$_HOSTADDRESS_PORT$!$_HOSTROUTER_NAME$!$_HOSTMSGBACKBONEIP!$_HOSTVPN_NAME$!$HOSTNAME$!$_HOSTSERVICE_FILTER$!$_HOSTSERVICE_XML$!$_HOSTCONFIG_FILE$!
        }

## SERVICE DEFINITION:QUEUE ##
define service{
        use                      generic-service,graphed-service         ; Name of service template to use
        host_name                <HOST_NAME_TOKEN>			 ; <**MODIFY TO THE HOSTNAME OF VPN**>
        service_description      Queue:<QUEUE_NAME_TOKEN>
	# <**MODIFY THE 4TH,5TH and 6TH ARG IN THE BELOW COMMAND TO CORRESPOND TO THE MACROS FOR THE QUEUE **>
        check_command            queue!$_HOSTROUTER_NAME$!$_HOSTADDRESS_PORT$!$_HOSTVPN_NAME$!$_HOSTQUEUE1$!$_HOSTQUEUE1_WD$!$_HOSTQUEUE1_CD$!$_HOSTQUEUE1_WU$!$_HOSTQUEUE1_CU$
}

## SERVICE DEFINITION:REPLICATION ##
define service{
        use                     generic-service,graphed-service         ; Name of service template to use
        host_name               <HOST_NAME_TOKEN>                      ; <**MODIFY TO THE HOSTNAME OF VPN**>
        service_description     Message-vpn:replication
        check_command           replication!$_HOSTROUTER_NAME$!$_HOSTADDRESS_PORT$!$_HOSTVPN_NAME$!
}

## SERVICE DEFINITION:VPN BRIDGE ##
define service{
        use                     generic-service,graphed-service         ; Name of service template to use
        host_name               <HOST_NAME_TOKEN>                      ;  <**MODIFY TO THE HOSTNAME OF VPN**>
        service_description     VPN Bridge[U]:<BRIDGE_NAME_TOKEN>
        # <**MODIFY THE 3RD ARG IN THE BELOW COMMAND TO CORRESPOND TO THE MACRO FOR THE BRIDGE **>
        check_command           bridge_uni!$_HOSTROUTER_NAME$!$_HOSTADDRESS_PORT$!$_HOSTBRIDGE1!$_HOSTVPN_NAME$
}

## SECTION 3: SERVICE DISCOVERY ##
# Below lines are generated by Nagios on service discovery: ***DO NOT MODIFY *** during normal operation of Nagios
# Delete the below lines and restart Nagios if you want Nagios to rediscover all the services
# On a VPN
