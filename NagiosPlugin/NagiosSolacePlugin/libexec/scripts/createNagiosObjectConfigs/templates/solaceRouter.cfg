## SECTION 1:HOST DEFINITION ##

define host{
        use                     linux-server    		; Name of host template to use
	host_name               <HOST_NAME_TOKEN>		; Host name of the router  <**MODIFY TO THE HOSTNAME OF ROUTER**>
        alias                   <HOST_ALIAS_TOKEN>			; Same as the host name    <**MODIFY TO THE HOSTNAME OF ROUTER**>
        address                 <MGMT_ADDRESS_TOKEN>  		; Management IP of the router, used for Ping checks - DO NOT APPEND a port number 
								; <**MODIFY TO THE MGMT IP OF ROUTER**>
        max_check_attempts      10

	# User defined macros - these are used as configuration parameters in service checks

	_address_port		<ADDRESS_PORT_TOKEN>   		; Management IP of the router with port number, used for all SEMP communications
								; <**MODIFY TO THE SEMP MGMT IP:PORT OF ROUTER**>
	
	#User defined macros for ping checks- Update these thresholds as required.

	 _ping_wrtpl		100.0,20%			; Warning  Avg RTT (ms) and % packet loss
	 _ping_crtpl		500.0,60%			; Critical Avg RTT (ms) and % packet loss
	
	#User defined macros for environment checks- Update these thresholds as required

	_env_wf			5000:				; Warning  Fan speed (RPM)
								; A WARNING alert is generated if the fan speed falls below this	
	_env_cf			2657:				; Critical Fan speed (RPM)
								; A CRITICAL alert is generated if the fan speed falls below this
	_env_wc			40				; Warning  Chassis temperature (c)
	_env_cc			45				; Critical Chassis temperatire (c)
	_env_wn			90				; Warning  NPU temperature (c)
	_env_cn 		110				; Critical NPU temperature (c)
	
	#User defined macros for hardware checks- Update these thresholds as required

	_hw_wps			2:				; Power Supply Warning
								; A WARNING  alert is generated if the number of power supplies fall below this
	_hw_cps			1:				; Power Supply Critical
								; A CRIT alert is generated if the number of power supplies fall below this
								
	#User defined macros for interface checks- Update these thresholds as required

	_iface_mgmt1		<INTERFACE_MGMT_TOKEN>		; Interface used for management IP	<** MODIFY TO THE NAME OF MANAGEMENT INTERFACE **>
	_iface_msgb1		<INTERFACE_MSGB_TOKEN>		; Interface used for msg-backbone IP	<** MODIFY TO THE NAME OF MSG BACKBONE INTERFACE **>
	_iface_wa		2:				; Warning  threshold for available members
								; A WARNING  alert is generated if the number of available members  falls below this
	_iface_ca		1:				; Critical threshold for available members
								; A CRITICAL alert is generated if the number of available members falls below this
	_iface_wo		2:				; Warning  threshold for operational members
								; A WARNING  alert is generated if the number of operational members  falls below this
	_iface_co		1:				; Critical threshold for operational members
								; A CRITICAL alert is generated if the number of operational members falls below this
	
	#User defined macros for memory checks- Update these parameters as required

	_mem_w			60				; Warning  threshold for memory (%)
	_mem_c			80				; Critical threshold for memory (%)
	
	
	#User defined macros for message-spool checks- Update these parameters as required
	_spool_wu		60				; Warning  threshold for disk Usage (%)
	_spool_cu		80				; Critical threshold for disk Usage (%)
	_spool_wt		60				; Warning  threshold for transacted sessions (%)
	_spool_ct		80				; Critical threshold for transacted sessions (%)
	_spool_waf		1000				; Warning  threshold for ADB file system usage (MB)
	_spool_caf		2000				; Critical threshold for ADB file system usage (MB)
	_spool_wam		1000				; Warning  threshold for ADB message usage
	_spool_cam		2000				; Critical threshold for ADB message usage
        
	#User defined macros for disk partition checks- Update these parameters as required

	_partition1_wu		70				; Warning  threshold for partition utilization (%)
	_partition1_cu		75				; Critical threshold for partition utilization (%)
	_partition1_fs		<PARTITION_FS_TOKEN>		; File system to be monitored		<** MODIFY TO THE NAME OF PARTITION **>
	}

## SECTION 2: HOSTGROUP DEFINITION ##
define hostgroup{
        hostgroup_name          <HOSTGROUP_NAME_TOKEN>			; Host name of the router  <**MODIFY TO THE HOSTNAME OF ROUTER**>
        alias                   <HOSTGROUP_ALIAS_TOKEN>			; Host name of the router  <**MODIFY TO THE HOSTNAME OF ROUTER**>
        members                 <HOSTGROUP_MEMBERS_TOKEN>		; <**MODIFY TO NAMES OF VPNS BEING MONITORED- SHOULD BE THE SAME AS THE HOST
									;    NAME IN THE VPN'S HOST DEFINITION**>
								     
        }

## SECTION 3: HOSTDEPENDENCY DEFINITION ##
define hostdependency{
        host_name                      <HOSTDEP_NAME_TOKEN>			; Host name of the router  <**MODIFY TO THE HOSTNAME OF ROUTER**>
        dependent_hostgroup_name       <HOSTGROUP_NAME_TOKEN>			; Host name of the router  <**MODIFY TO THE HOSTNAME OF ROUTER**>
        notification_failure_criteria  d,u
}

##SECTION 4: SERVICE DEFINITIONS ##

## SERVICE DEFINITION:PING ##
define service{
        use			local-service,graphed-service           ; Name of service template to use
        host_name		<HOST_NAME_TOKEN>			        ; Host name of the router  <**MODIFY TO THE HOSTNAME OF ROUTER**>
        service_description	Router:PING
        check_command		check_ping!$_HOSTPING_WRTPL$!$_HOSTPING_CRTPL$
}

## SERVICE DEFINITION:ALARM ##
define service{
        use			generic-service         		; Name of service template to use
        host_name		<HOST_NAME_TOKEN>				; Host name of the router  <**MODIFY TO THE HOSTNAME OF ROUTER**>
        service_description	Router:alarm
        check_command		alarm!$HOSTNAME$!$_HOSTADDRESS_PORT$
        }

# SERVICE DEFINITION:DISK ##
define service{
        use			generic-service         		; Name of service template to use
        host_name		<HOST_NAME_TOKEN>		   		; Host name of the router  <**MODIFY TO THE HOSTNAME OF ROUTER**>
        service_description	Router:disk
        check_command		disk!$HOSTNAME$!$_HOSTADDRESS_PORT$
        }

## SERVICE DEFINITION:ENVIRONMENT ##
define service{
        use			generic-service,graphed-service         ; Name of service template to use
        host_name		<HOST_NAME_TOKEN>				; Host name of the router  <**MODIFY TO THE HOSTNAME OF ROUTER**>
        service_description	Router:environment
        check_command		env!$HOSTNAME$!$_HOSTADDRESS_PORT$!$_HOSTENV_WF$!$_HOSTENV_CF$!$_HOSTENV_WC$!$_HOSTENV_CC$!$_HOSTENV_WN$!$_HOSTENV_CN$
        }

## SERVICE DEFINITION:HARDWARE ##
define service{
       use			generic-service         		; Name of service template to use
       host_name		<HOST_NAME_TOKEN>	       			; Host name of the router  <**MODIFY TO THE HOSTNAME OF ROUTER**>
       service_description	Router:hardware
       check_command		hardware!$HOSTNAME$!$_HOSTADDRESS_PORT$!$_HOSTHW_WPS$!$_HOSTHW_CPS$
       }

### SERVICE DEFINITION:INTERFACE_MGMT ##
define service{
        use			generic-service,graphed-service         ; Name of service template to use
        host_name		<HOST_NAME_TOKEN>				; Host name of the router  <**MODIFY TO THE HOSTNAME OF ROUTER**>
        service_description	Router:interface <INTERFACE_MGMT_TOKEN>
        check_command		iface_eth!$HOSTNAME$!$_HOSTADDRESS_PORT$!$_HOSTIFACE_MGMT1$
        }

## SERVICE DEFINITION:INTERFACE_MSGBACKBONE ##
define service{
        use			generic-service,graphed-service         ; Name of service template to use
        host_name		<HOST_NAME_TOKEN>				; Host name of the router  <**MODIFY TO THE HOSTNAME OF ROUTER**>
        service_description	Router:interface <INTERFACE_MSGB_TOKEN>
        check_command		iface_lag!$HOSTNAME$!$_HOSTADDRESS_PORT$!$_HOSTIFACE_MSGB1$!$_HOSTIFACE_WA$!$_HOSTIFACE_CA$!$_HOSTIFACE_WO$!$_HOSTIFACE_CO$
        }

## SERVICE DEFINITION:MEMORY ##
define service{
        use			generic-service,graphed-service         ; Name of service template to use
        host_name		<HOST_NAME_TOKEN>				; Host name of the router  <**MODIFY TO THE HOSTNAME OF ROUTER**>
        service_description	Router:memory
        check_command		memory!$HOSTNAME$!$_HOSTADDRESS_PORT$!$_HOSTMEM_W$!$_HOSTMEM_C$
        }

#define service{
#        use			generic-service,graphed-service         ; Name of service template to use
#        host_name		<HOST_NAME_TOKEN>				; This should be the same as the host_name in the host DEFINITION
#        service_description	Router:SqlWriter
#        check_command		nagios_push!$HOSTNAME$!$LONGSERVICEOUTPUT$
#        active_checks_enabled	0
#        passive_checks_enabled	1
#        }


## SERVICE DEFINITION:MESSAGE_SPOOL ##
define service{
        use			generic-service,graphed-service         ; Name of service template to use
        host_name		<HOST_NAME_TOKEN>				; Host name of the router  <**MODIFY TO THE HOSTNAME OF ROUTER**>
        service_description	Router:message-spool
        check_command		message-spool!$HOSTNAME$!$_HOSTADDRESS_PORT$!$_HOSTSPOOL_WU!$_HOSTSPOOL_CU$!
}

## SERVICE DEFINITION:REDUNDANCY ##
define service{
        use			generic-service,graphed-service         ; Name of service template to use
        host_name		<HOST_NAME_TOKEN>				; Host name of the router  <**MODIFY TO THE HOSTNAME OF ROUTER**>
        service_description	Router:redundancy
        check_command		redundancy!$HOSTNAME$!$_HOSTADDRESS_PORT$!
}

## SERVICE DEFINITION:PARTITION ##
define service{
        use			generic-service,graphed-service         ; Name of service template to use
        host_name		<HOST_NAME_TOKEN>				; Host name of the router  <**MODIFY TO THE HOSTNAME OF ROUTER**>
        service_description	Router:partition <PARTITION_FS_TOKEN>
        check_command		partition!$HOSTNAME$!$_HOSTADDRESS_PORT$!$_HOSTPARTITION1_WU$!$_HOSTPARTITION1_CU$!$_HOSTPARTITION1_FS$
}


