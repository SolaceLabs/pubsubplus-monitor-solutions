# A simple configuration file for monitoring the local host
# This can serve as an example for configuring other servers;
# Custom services specific to this host are added here, but services
# defined in nagios2-common_services.cfg may also apply.
# 

define host{
        use                     generic-host            ; Name of host template to use
        host_name               <routername>
        alias                   <routername>
        address                 <routerip>
        }

define service{
        use                             generic-service         ; Name of service template to use
        host_name                       <routername>
        service_description             Alarm
        check_command                   alarm!<ip:port>!<user!<password>
        }

define service{
        use                             generic-service         ; Name of service template to use
        host_name                       <routername>
        service_description             bridge <unidirectionnal bridgename>
        check_command                   bridge_uni!<ip:port>!<user!<password>!<bridge>!vpn
        }
define service{
        use                             generic-service         ; Name of service template to use
        host_name                       <routername>
        service_description             bridge <bidirectionnal bridgename>
        check_command                   bridge_bi!<ip:port>!<user!<password>!<bridge>!vpn
        }
define service{
        use                             generic-service         ; Name of service template to use
        host_name                       <routername>
        service_description             disk
        check_command                   disk!<ip:port>!<user!<password>
        }
define service{
        use                             generic-service         ; Name of service template to use
        host_name                       <routername>
        service_description             env
        check_command                   env!<ip:port>!<user!<password>!<warning fan threshold>!<critical fan threshold>!<warning chassis threshold>!<critical chassis threshold>!<warning npu threshold>!<critical npu threshold>
        }
define service{
        use                             generic-service         ; Name of service template to use
        host_name                       <routername>
        service_description             hardware
        check_command                   hardware!<ip:port>!<user!<password>!<warning psu threshold>!<critical psu threshold>
        }    
define service{
        use                             generic-service         ; Name of service template to use
        host_name                       <routername>
        service_description             iface <iface name>
        check_command                   iface_eth!<ip:port>!<user!<password>!<iface name>
        }    
define service{
        use                             generic-service         ; Name of service template to use
        host_name                       <routername>
        service_description             iface <iface name>
        check_command                   iface_lag!<ip:port>!<user!<password>!<iface name>!<warning threshold available members>!<critical threshold available members>!<warning threshold operationnal members>!<critical threshold operationnal members>
        }  
define service{
        use                             generic-service         ; Name of service template to use
        host_name                       <routername>
        service_description             memory
        check_command                   memory!<ip:port>!<user!<password>!<warning threshold %>!<critical threshold %>
        }    
define service{
        use                             generic-service         ; Name of service template to use
        host_name                       <routername>
        service_description             spool_vpn <vpn name>
        check_command                   spool_vpn!<ip:port>!<user!<password>!<vpn>!<warning threshold %>!<critical threshold %>
        } 
define service{
        use                             generic-service         ; Name of service template to use
        host_name                       <routername>
        service_description             message-spool
        check_command                   message-spool!<ip:port>!<user!<password>!<warning transacted session usage %>!<critical transacted session usage %>!<warning ADB usage (MB)>!<critical ADB usage (MB)>!<warning ADB usage (Msgs)>!<critical ADB usage (Msgs)>!<warning Disk usage (MB)>!<critical Disk usage (MB)>!<warning Disk usage (Msgs)>!<critical Disk usage (Msgs)>!<warning Total usage (MB)>!<critical Total usage (MB)>!<warning Total usage (Msgs)>!<critical Total usage (Msgs)>
        } 
define service{
        use                             generic-service         ; Name of service template to use
        host_name                       <routername>
        service_description             partition <partition name>
        check_command                   partition!<ip:port>!<user!<password>!<warning partition usage %>!<critical partition usage %>!<partition>
        }
define service{
        use                             generic-service         ; Name of service template to use
        host_name                       <routername>
        service_description             queue <queue name>@<vpn name>
        check_command                   queue!<ip:port>!<user!<password>!<vpn>!<queue name>!<warning queue threshold (Msgs)>!<critical queue threshold (Msgs)>
        }
define service{
        use                             generic-service         ; Name of service template to use
        host_name                       <routername>
        service_description             redundancy
        check_command                   redundancy!<ip:port>!<user!<password>
        }      
define service{
        use                             generic-service         ; Name of service template to use
        host_name                       <routername>
        service_description             replication <vpn name>
        check_command                   replication!<ip:port>!<user!<password>!<vpn>
        }
define service{
        use                             generic-service         ; Name of service template to use
        host_name                       <routername>
        service_description             vpn <vpn name>
        check_command                   vpn!<ip:port>!<user!<password>!<vpn>!<warning Inrate val (msgs)>!<Critical Inrate val (msgs)>!<warning Outrate val (msgs)>!<Critical Outrate val (msgs)>!<warning val (connection)>!<Critical val (connections)>
        }                       
        